import{_ as e,r as o,o as c,a as l,b as n,d as p,F as u,e as s,c as a}from"./app.21ea0d90.js";const r={},i=n("h1",{id:"react-jsx-\u89C4\u8303\u6307\u5357",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-jsx-\u89C4\u8303\u6307\u5357","aria-hidden":"true"},"#"),s(" React/JSX \u89C4\u8303\u6307\u5357")],-1),k=n("p",null,[n("em",null,"\u7B97\u662F\u6700\u5408\u7406\u7684 React/JSX \u7F16\u7801\u89C4\u8303\u4E4B\u4E00\u4E86")],-1),d=n("h2",{id:"basic-rules-\u57FA\u672C\u89C4\u8303",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#basic-rules-\u57FA\u672C\u89C4\u8303","aria-hidden":"true"},"#"),s(" Basic Rules \u57FA\u672C\u89C4\u8303")],-1),b=s("\u6BCF\u4E2A\u6587\u4EF6\u53EA\u5199\u4E00\u4E2A\u6A21\u5757. "),m=s("\u4F46\u662F\u591A\u4E2A"),g={href:"https://facebook.github.io/react/docs/reusable-components.html#stateless-functions",target:"_blank",rel:"noopener noreferrer"},h=s("\u65E0\u72B6\u6001\u6A21\u5757"),_=s("\u53EF\u4EE5\u653E\u5728\u5355\u4E2A\u6587\u4EF6\u4E2D. eslint: "),v={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-multi-comp.md#ignorestateless",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"react/no-multi-comp",-1),x=s("."),y=n("li",null,"\u63A8\u8350\u4F7F\u7528JSX\u8BED\u6CD5.",-1),j=n("li",null,[s("\u4E0D\u8981\u4F7F\u7528 "),n("code",null,"React.createElement"),s("\uFF0C\u9664\u975E\u4ECE\u4E00\u4E2A\u975EJSX\u7684\u6587\u4EF6\u4E2D\u521D\u59CB\u5316\u4F60\u7684app.")],-1),q=n("h2",{id:"\u521B\u5EFA\u6A21\u5757",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u521B\u5EFA\u6A21\u5757","aria-hidden":"true"},"#"),s(" \u521B\u5EFA\u6A21\u5757")],-1),w=n("p",null,"Class vs React.createClass vs stateless",-1),C=s("\u5982\u679C\u4F60\u7684\u6A21\u5757\u6709\u5185\u90E8\u72B6\u6001\u6216\u8005\u662F"),R=n("code",null,"refs",-1),F=s(", \u63A8\u8350\u4F7F\u7528 "),P=n("code",null,"class extends React.Component",-1),S=s(" \u800C\u4E0D\u662F "),N=n("code",null,"React.createClass",-1),W=s(" ,\u9664\u975E\u4F60\u6709\u5145\u8DB3\u7684\u7406\u7531\u6765\u4F7F\u7528\u8FD9\u4E9B\u65B9\u6CD5. eslint: "),L={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-es6-class.md",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"react/prefer-es6-class",-1),T=s(),D={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-stateless-function.md",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"react/prefer-stateless-function",-1),J=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> Listing <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>hello<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Listing</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>hello<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5982\u679C\u4F60\u7684\u6A21\u5757\u6CA1\u6709\u72B6\u6001\u6216\u662F\u6CA1\u6709\u5F15\u7528<code>refs</code>\uFF0C \u63A8\u8350\u4F7F\u7528\u666E\u901A\u51FD\u6570\uFF08\u975E\u7BAD\u5934\u51FD\u6570\uFF09\u800C\u4E0D\u662F\u7C7B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">Listing</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>hello<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad (relying on function name inference is discouraged)</span>
<span class="token keyword">const</span> <span class="token function-variable function">Listing</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> hello <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>hello<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">Listing</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> hello <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>hello<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,3),X=n("h2",{id:"naming-\u547D\u540D",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#naming-\u547D\u540D","aria-hidden":"true"},"#"),s(" Naming \u547D\u540D")],-1),z=n("li",null,[n("p",null,[n("strong",null,"\u6269\u5C55\u540D"),s(": React\u6A21\u5757\u4F7F\u7528 "),n("code",null,".jsx"),s(" \u6269\u5C55\u540D.")])],-1),U=n("li",null,[n("p",null,[n("strong",null,"\u6587\u4EF6\u540D"),s(": \u6587\u4EF6\u540D\u4F7F\u7528\u9A7C\u5CF0\u5F0F. \u5982, "),n("code",null,"ReservationCard.jsx"),s(".")])],-1),A=n("strong",null,"\u5F15\u7528\u547D\u540D",-1),B=s(": React\u6A21\u5757\u540D\u4F7F\u7528\u9A7C\u5CF0\u5F0F\u547D\u540D\uFF0C\u5B9E\u4F8B\u4F7F\u7528\u9A86\u9A7C\u5F0F\u547D\u540D. eslint: "),E={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-pascal-case.md",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"react/jsx-pascal-case",-1),O=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> reservationCard <span class="token keyword">from</span> <span class="token string">&#39;./ReservationCard&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> ReservationCard <span class="token keyword">from</span> <span class="token string">&#39;./ReservationCard&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> ReservationItem <span class="token operator">=</span> <span class="token operator">&lt;</span>ReservationCard <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> reservationItem <span class="token operator">=</span> <span class="token operator">&lt;</span>ReservationCard <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,1),V=a(`<li><p><strong>\u6A21\u5757\u547D\u540D</strong>: \u6A21\u5757\u4F7F\u7528\u5F53\u524D\u6587\u4EF6\u540D\u4E00\u6837\u7684\u540D\u79F0. \u6BD4\u5982 <code>ReservationCard.jsx</code> \u5E94\u8BE5\u5305\u542B\u540D\u4E3A <code>ReservationCard</code>\u7684\u6A21\u5757. \u4F46\u662F\uFF0C\u5982\u679C\u6574\u4E2A\u6587\u4EF6\u5939\u662F\u4E00\u4E2A\u6A21\u5757\uFF0C\u4F7F\u7528 <code>index.js</code>\u4F5C\u4E3A\u5165\u53E3\u6587\u4EF6\uFF0C\u7136\u540E\u76F4\u63A5\u4F7F\u7528 <code>index.js</code> \u6216\u8005\u6587\u4EF6\u5939\u540D\u4F5C\u4E3A\u6A21\u5757\u7684\u540D\u79F0:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">&#39;./Footer/Footer&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">&#39;./Footer/index&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">&#39;./Footer&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p><strong>\u9AD8\u9636\u6A21\u5757\u547D\u540D</strong>: \u5BF9\u4E8E\u751F\u6210\u4E00\u4E2A\u65B0\u7684\u6A21\u5757\uFF0C\u5176\u4E2D\u7684\u6A21\u5757\u540D <code>displayName</code> \u5E94\u8BE5\u4E3A\u9AD8\u9636\u6A21\u5757\u540D\u548C\u4F20\u5165\u6A21\u5757\u540D\u7684\u7EC4\u5408. \u4F8B\u5982, \u9AD8\u9636\u6A21\u5757 <code>withFoo()</code>, \u5F53\u4F20\u5165\u4E00\u4E2A <code>Bar</code> \u6A21\u5757\u7684\u65F6\u5019\uFF0C \u751F\u6210\u7684\u6A21\u5757\u540D <code>displayName</code> \u5E94\u8BE5\u4E3A <code>withFoo(Bar)</code>.</p></li>`,2),K=a(`<blockquote><p>\u4E3A\u4EC0\u4E48\uFF1F\u4E00\u4E2A\u6A21\u5757\u7684 <code>displayName</code> \u53EF\u80FD\u4F1A\u5728\u5F00\u53D1\u8005\u5DE5\u5177\u6216\u8005\u9519\u8BEF\u4FE1\u606F\u4E2D\u4F7F\u7528\u5230\uFF0C\u56E0\u6B64\u6709\u4E00\u4E2A\u80FD\u6E05\u695A\u7684\u8868\u8FBE\u8FD9\u5C42\u5173\u7CFB\u7684\u503C\u80FD\u5E2E\u52A9\u6211\u4EEC\u66F4\u597D\u7684\u7406\u89E3\u6A21\u5757\u53D1\u751F\u4E86\u4EC0\u4E48\uFF0C\u66F4\u597D\u7684Debug.</p></blockquote><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">withFoo</span><span class="token punctuation">(</span><span class="token parameter">WrappedComponent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">WithFoo</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedComponent</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">foo</span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">withFoo</span><span class="token punctuation">(</span><span class="token parameter">WrappedComponent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">WithFoo</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WrappedComponent</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">foo</span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> wrappedComponentName <span class="token operator">=</span> WrappedComponent<span class="token punctuation">.</span>displayName
    <span class="token operator">||</span> WrappedComponent<span class="token punctuation">.</span>name
    <span class="token operator">||</span> <span class="token string">&#39;Component&#39;</span><span class="token punctuation">;</span>

  WithFoo<span class="token punctuation">.</span>displayName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">withFoo(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>wrappedComponentName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> WithFoo<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="declaration-\u58F0\u660E\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#declaration-\u58F0\u660E\u6A21\u5757" aria-hidden="true">#</a> Declaration \u58F0\u660E\u6A21\u5757</h2><ul><li><p>\u4E0D\u8981\u4F7F\u7528 <code>displayName</code> \u6765\u547D\u540DReact\u6A21\u5757\uFF0C\u800C\u662F\u4F7F\u7528\u5F15\u7528\u6765\u547D\u540D\u6A21\u5757\uFF0C \u5982 class \u540D\u79F0.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">displayName</span><span class="token operator">:</span> <span class="token string">&#39;ReservationCard&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// stuff goes here</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ReservationCard</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h2 id="alignment-\u4EE3\u7801\u5BF9\u9F50" tabindex="-1"><a class="header-anchor" href="#alignment-\u4EE3\u7801\u5BF9\u9F50" aria-hidden="true">#</a> Alignment \u4EE3\u7801\u5BF9\u9F50</h2>`,5),Q=s("\u9075\u5FAA\u4EE5\u4E0B\u7684JSX\u8BED\u6CD5\u7F29\u8FDB/\u683C\u5F0F. eslint: "),$={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"react/jsx-closing-bracket-location",-1),Y=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">superLongParam</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar<span class="token punctuation">&quot;</span></span>
     <span class="token attr-name">anotherSuperLongParam</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>baz<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good, \u6709\u591A\u884C\u5C5E\u6027\u7684\u8BDD, \u65B0\u5EFA\u4E00\u884C\u5173\u95ED\u6807\u7B7E</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
  <span class="token attr-name">superLongParam</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">anotherSuperLongParam</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>baz<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>

<span class="token comment">// \u82E5\u80FD\u5728\u4E00\u884C\u4E2D\u663E\u793A, \u76F4\u63A5\u5199\u6210\u4E00\u884C</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// \u5B50\u5143\u7D20\u6309\u7167\u5E38\u89C4\u65B9\u5F0F\u7F29\u8FDB</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
  <span class="token attr-name">superLongParam</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">anotherSuperLongParam</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>baz<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Quux</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Foo</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,1),Z=n("h2",{id:"quotes-\u5355\u5F15\u53F7\u8FD8\u662F\u53CC\u5F15\u53F7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#quotes-\u5355\u5F15\u53F7\u8FD8\u662F\u53CC\u5F15\u53F7","aria-hidden":"true"},"#"),s(" Quotes \u5355\u5F15\u53F7\u8FD8\u662F\u53CC\u5F15\u53F7")],-1),nn=s("\u5BF9\u4E8EJSX\u5C5E\u6027\u503C\u603B\u662F\u4F7F\u7528\u53CC\u5F15\u53F7("),sn=n("code",null,'"',-1),an=s("), \u5176\u4ED6\u5747\u4F7F\u7528\u5355\u5F15\u53F7. eslint: "),tn={href:"http://eslint.org/docs/rules/jsx-quotes",target:"_blank",rel:"noopener noreferrer"},pn=n("code",null,"jsx-quotes",-1),en=s("\u4E3A\u4EC0\u4E48? JSX\u5C5E\u6027 "),on={href:"http://eslint.org/docs/rules/jsx-quotes",target:"_blank",rel:"noopener noreferrer"},cn=s("\u4E0D\u80FD\u5305\u62EC\u8F6C\u8BD1\u7684\u5F15\u53F7"),ln=s(", \u56E0\u6B64\u5728\u53CC\u5F15\u53F7\u91CC\u5305\u62EC\u50CF "),un=n("code",null,`"don't"`,-1),rn=s(" \u7684\u5C5E\u6027\u503C\u66F4\u5BB9\u6613\u8F93\u5165. HTML\u5C5E\u6027\u4E5F\u662F\u7528\u53CC\u5F15\u53F7\uFF0C\u6240\u4EE5JSX\u5C5E\u6027\u4E5F\u9075\u5FAA\u540C\u6837\u7684\u8BED\u6CD5."),kn=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>bar<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&quot;20px&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&#39;20px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="spacing-\u7A7A\u683C" tabindex="-1"><a class="header-anchor" href="#spacing-\u7A7A\u683C" aria-hidden="true">#</a> Spacing \u7A7A\u683C</h2>`,2),dn=a(`<li><p>\u603B\u662F\u5728\u81EA\u52A8\u5173\u95ED\u7684\u6807\u7B7E\u524D\u52A0\u4E00\u4E2A\u7A7A\u683C\uFF0C\u6B63\u5E38\u60C5\u51B5\u4E0B\u4E5F\u4E0D\u9700\u8981\u6362\u884C.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span><span class="token punctuation">/&gt;</span></span>

<span class="token comment">// very bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>                 <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
 <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li>`,1),bn=s("\u4E0D\u8981\u5728JSX "),mn=n("code",null,"{}",-1),gn=s(" \u5F15\u7528\u62EC\u53F7\u91CC\u4E24\u8FB9\u52A0\u7A7A\u683C. eslint: "),hn={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-spacing.md",target:"_blank",rel:"noopener noreferrer"},_n=n("code",null,"react/jsx-curly-spacing",-1),vn=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">bar</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span> baz <span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">bar</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>baz<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,1),fn=n("h2",{id:"props-\u5C5E\u6027",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#props-\u5C5E\u6027","aria-hidden":"true"},"#"),s(" Props \u5C5E\u6027")],-1),xn=a(`<li><p>JSX\u5C5E\u6027\u540D\u4F7F\u7528\u9A86\u9A7C\u5F0F\u98CE\u683C<code>camelCase</code>.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
  <span class="token attr-name">UserName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">phone_number</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12345678</span><span class="token punctuation">}</span></span>
<span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
  <span class="token attr-name">userName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">phoneNumber</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12345678</span><span class="token punctuation">}</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li>`,1),yn=s("\u5982\u679C\u5C5E\u6027\u503C\u4E3A "),jn=n("code",null,"true",-1),qn=s(", \u53EF\u4EE5\u76F4\u63A5\u7701\u7565. eslint: "),wn={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-boolean-value.md",target:"_blank",rel:"noopener noreferrer"},Cn=n("code",null,"react/jsx-boolean-value",-1),Rn=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
  <span class="token attr-name">hidden</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>
<span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
  <span class="token attr-name">hidden</span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,1),Fn=n("li",null,[n("p",null,[n("img"),s("\xA0\u6807\u7B7E\u603B\u662F\u6DFB\u52A0\xA0alt\xA0\u5C5E\u6027. \u5982\u679C\u56FE\u7247\u4EE5presentation(\u611F\u89C9\u662F\u4EE5\u7C7B\u4F3CPPT\u65B9\u5F0F\u663E\u793A?)\u65B9\u5F0F\u663E\u793A\uFF0Calt\xA0\u53EF\u4E3A\u7A7A, \u6216\u8005"),n("img"),s('\xA0\u8981\u5305\u542Brole="presentation". eslint:\xA0jsx-a11y/img-has-alt')])],-1),Pn=s("\u4E0D\u8981\u5728 "),Sn=n("code",null,"alt",-1),Nn=s(' \u503C\u91CC\u4F7F\u7528\u5982 "image", "photo", or "picture"\u5305\u62EC\u56FE\u7247\u542B\u4E49\u8FD9\u6837\u7684\u8BCD\uFF0C \u4E2D\u6587\u4E5F\u4E00\u6837. eslint: '),Wn={href:"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/img-has-alt.md",target:"_blank",rel:"noopener noreferrer"},Ln=n("code",null,"jsx-a11y/img-redundant-alt",-1),Mn=a(`<blockquote><p>\u4E3A\u4EC0\u4E48? \u5C4F\u5E55\u52A9\u8BFB\u5668\u5DF2\u7ECF\u628A <code>img</code> \u6807\u7B7E\u6807\u6CE8\u4E3A\u56FE\u7247\u4E86, \u6240\u4EE5\u6CA1\u6709\u5FC5\u8981\u518D\u5728 <code>alt</code> \u91CC\u8BF4\u660E\u4E86.</p></blockquote><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Picture of me waving hello<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Me waving hello<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,2),Tn=s("\u4F7F\u7528\u6709\u6548\u6B63\u786E\u7684 aria "),Dn=n("code",null,"role",-1),In=s("\u5C5E\u6027\u503C "),Jn={href:"https://www.w3.org/TR/wai-aria/roles#role_definitions",target:"_blank",rel:"noopener noreferrer"},Xn=s("ARIA roles"),zn=s(". eslint: "),Un={href:"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-role.md",target:"_blank",rel:"noopener noreferrer"},An=n("code",null,"jsx-a11y/aria-role",-1),Bn=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad - not an ARIA role</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>datepicker<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// bad - abstract ARIA role</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,1),En=s("\u4E0D\u8981\u5728\u6807\u7B7E\u4E0A\u4F7F\u7528 "),Hn=n("code",null,"accessKey",-1),On=s(" \u5C5E\u6027. eslint: "),Vn={href:"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-access-key.md",target:"_blank",rel:"noopener noreferrer"},Kn=n("code",null,"jsx-a11y/no-access-key",-1),Qn=a(`<blockquote><p>\u4E3A\u4EC0\u4E48? \u5C4F\u5E55\u52A9\u8BFB\u5668\u5728\u952E\u76D8\u5FEB\u6377\u952E\u4E0E\u952E\u76D8\u547D\u4EE4\u65F6\u9020\u6210\u7684\u4E0D\u7EDF\u4E00\u6027\u4F1A\u5BFC\u81F4\u9605\u8BFB\u6027\u66F4\u52A0\u590D\u6742.</p></blockquote><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">accessKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,2),$n=s("\u907F\u514D\u4F7F\u7528\u6570\u7EC4\u7684index\u6765\u4F5C\u4E3A\u5C5E\u6027"),Gn=n("code",null,"key",-1),Yn=s("\u7684\u503C\uFF0C\u63A8\u8350\u4F7F\u7528\u552F\u4E00ID. ("),Zn={href:"https://medium.com/@robinpokorny/index-as-a-key-is-an-anti-pattern-e0349aece318",target:"_blank",rel:"noopener noreferrer"},ns=s("\u4E3A\u4EC0\u4E48?"),ss=s(")"),as=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token punctuation">{</span>todos<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Todo</span></span>
    <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>todo<span class="token punctuation">}</span></span>
    <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span>
  <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">)</span><span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token punctuation">{</span>todos<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">todo</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Todo</span></span>
    <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>todo<span class="token punctuation">}</span></span>
    <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span>
  <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> Refs</h2>`,2),ts=s("\u603B\u662F\u5728Refs\u91CC\u4F7F\u7528\u56DE\u8C03\u51FD\u6570. eslint: "),ps={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-string-refs.md",target:"_blank",rel:"noopener noreferrer"},es=n("code",null,"react/no-string-refs",-1),os=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
  <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myRef<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
  <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">ref</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>myRef <span class="token operator">=</span> ref<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,1),cs=n("h2",{id:"parentheses-\u62EC\u53F7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parentheses-\u62EC\u53F7","aria-hidden":"true"},"#"),s(" Parentheses \u62EC\u53F7")],-1),ls=s("\u5C06\u591A\u884C\u7684JSX\u6807\u7B7E\u5199\u5728 "),us=n("code",null,"()",-1),rs=s("\u91CC. eslint: "),is={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/wrap-multilines.md",target:"_blank",rel:"noopener noreferrer"},ks=n("code",null,"react/wrap-multilines",-1),ds=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyComponent</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>long body<span class="token punctuation">&quot;</span></span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
           </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyChild</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
         </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyComponent</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyComponent</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>long body<span class="token punctuation">&quot;</span></span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyChild</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyComponent</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good, \u5355\u884C\u53EF\u4EE5\u4E0D\u9700\u8981</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">hello</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyComponent</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>body<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyComponent</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,1),bs=n("h2",{id:"tags-\u6807\u7B7E",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tags-\u6807\u7B7E","aria-hidden":"true"},"#"),s(" Tags \u6807\u7B7E")],-1),ms=s("\u5BF9\u4E8E\u6CA1\u6709\u5B50\u5143\u7D20\u7684\u6807\u7B7E\u6765\u8BF4\u603B\u662F\u81EA\u5DF1\u5173\u95ED\u6807\u7B7E. eslint: "),gs={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md",target:"_blank",rel:"noopener noreferrer"},hs=n("code",null,"react/self-closing-comp",-1),_s=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stuff<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Foo</span></span><span class="token punctuation">&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stuff<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,1),vs=s("\u5982\u679C\u6A21\u5757\u6709\u591A\u884C\u7684\u5C5E\u6027\uFF0C \u5173\u95ED\u6807\u7B7E\u65F6\u65B0\u5EFA\u4E00\u884C. eslint: "),fs={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md",target:"_blank",rel:"noopener noreferrer"},xs=n("code",null,"react/jsx-closing-bracket-location",-1),ys=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
  <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">baz</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>baz<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">// good</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span>
  <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">baz</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>baz<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,1),js=n("h2",{id:"methods-\u51FD\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#methods-\u51FD\u6570","aria-hidden":"true"},"#"),s(" Methods \u51FD\u6570")],-1),qs=a(`<li><p>\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u6765\u83B7\u53D6\u672C\u5730\u53D8\u91CF.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">ItemList</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span></span>
          <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>key<span class="token punctuation">}</span></span>
          <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">doSomethingWith</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/&gt;</span></span>
      <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li>`,1),ws=s("\u5F53\u5728 "),Cs=n("code",null,"render()",-1),Rs=s(" \u91CC\u4F7F\u7528\u4E8B\u4EF6\u5904\u7406\u65B9\u6CD5\u65F6\uFF0C\u63D0\u524D\u5728\u6784\u9020\u51FD\u6570\u91CC\u628A "),Fs=n("code",null,"this",-1),Ps=s(" \u7ED1\u5B9A\u4E0A\u53BB. eslint: "),Ss={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md",target:"_blank",rel:"noopener noreferrer"},Ns=n("code",null,"react/jsx-no-bind",-1),Ws=a(`<blockquote><p>\u4E3A\u4EC0\u4E48? \u5728\u6BCF\u6B21 <code>render</code> \u8FC7\u7A0B\u4E2D\uFF0C \u518D\u8C03\u7528 <code>bind</code> \u90FD\u4F1A\u65B0\u5EFA\u4E00\u4E2A\u65B0\u7684\u51FD\u6570\uFF0C\u6D6A\u8D39\u8D44\u6E90.</p></blockquote><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">extends</span> React<span class="token punctuation">.</span>Component <span class="token punctuation">{</span>
  <span class="token function">onClickDiv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do stuff</span>
  <span class="token punctuation">}</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onClickDiv</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">extends</span> React<span class="token punctuation">.</span>Component <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>onClickDiv <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onClickDiv</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">onClickDiv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do stuff</span>
  <span class="token punctuation">}</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onClickDiv<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>`,2),Ls=a(`<li><p>\u5728React\u6A21\u5757\u4E2D\uFF0C\u4E0D\u8981\u7ED9\u6240\u8C13\u7684\u79C1\u6709\u51FD\u6570\u6DFB\u52A0 <code>_</code> \u524D\u7F00\uFF0C\u672C\u8D28\u4E0A\u5B83\u5E76\u4E0D\u662F\u79C1\u6709\u7684.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">_onClickSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do stuff</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// other stuff</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">extends</span> React<span class="token punctuation">.</span>Component <span class="token punctuation">{</span>
  <span class="token function">onClickSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do stuff</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// other stuff</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li>`,1),Ms=s("\u5728 "),Ts=n("code",null,"render",-1),Ds=s(" \u65B9\u6CD5\u4E2D\u603B\u662F\u786E\u4FDD "),Is=n("code",null,"return",-1),Js=s(" \u8FD4\u56DE\u503C. eslint: "),Xs={href:"https://github.com/yannickcr/eslint-plugin-react/pull/502",target:"_blank",rel:"noopener noreferrer"},zs=n("code",null,"require-render-return",-1),Us=a(`<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// bad</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,1),As=a('<h2 id="ordering-react-\u6A21\u5757\u751F\u547D\u5468\u671F" tabindex="-1"><a class="header-anchor" href="#ordering-react-\u6A21\u5757\u751F\u547D\u5468\u671F" aria-hidden="true">#</a> Ordering React \u6A21\u5757\u751F\u547D\u5468\u671F</h2><ul><li><code>class extends React.Component</code> \u7684\u751F\u547D\u5468\u671F\u51FD\u6570:</li></ul><ol><li>\u53EF\u9009\u7684 <code>static</code> \u65B9\u6CD5</li><li><code>constructor</code> \u6784\u9020\u51FD\u6570</li><li><code>getChildContext</code> \u83B7\u53D6\u5B50\u5143\u7D20\u5185\u5BB9</li><li><code>componentWillMount</code> \u6A21\u5757\u6E32\u67D3\u524D</li><li><code>componentDidMount</code> \u6A21\u5757\u6E32\u67D3\u540E</li><li><code>componentWillReceiveProps</code> \u6A21\u5757\u5C06\u63A5\u53D7\u65B0\u7684\u6570\u636E</li><li><code>shouldComponentUpdate</code> \u5224\u65AD\u6A21\u5757\u9700\u4E0D\u9700\u8981\u91CD\u65B0\u6E32\u67D3</li><li><code>componentWillUpdate</code> \u4E0A\u9762\u7684\u65B9\u6CD5\u8FD4\u56DE <code>true</code>\uFF0C \u6A21\u5757\u5C06\u91CD\u65B0\u6E32\u67D3</li><li><code>componentDidUpdate</code> \u6A21\u5757\u6E32\u67D3\u7ED3\u675F</li><li><code>componentWillUnmount</code> \u6A21\u5757\u5C06\u4ECEDOM\u4E2D\u6E05\u9664, \u505A\u4E00\u4E9B\u6E05\u7406\u4EFB\u52A1</li><li><em>\u70B9\u51FB\u56DE\u8C03\u6216\u8005\u4E8B\u4EF6\u5904\u7406\u5668</em> \u5982 <code>onClickSubmit()</code> \u6216 <code>onChangeDescription()</code></li><li><em><code>render</code> \u91CC\u7684 getter \u65B9\u6CD5</em> \u5982 <code>getSelectReason()</code> \u6216 <code>getFooterContent()</code></li><li><em>\u53EF\u9009\u7684 render \u65B9\u6CD5</em> \u5982 <code>renderNavigation()</code> \u6216 <code>renderProfilePicture()</code></li><li><code>render</code> render() \u65B9\u6CD5</li></ol>',3),Bs=a(`<li><p>\u5982\u4F55\u5B9A\u4E49 <code>propTypes</code>, <code>defaultProps</code>, <code>contextTypes</code>, \u7B49\u7B49\u5176\u4ED6\u5C5E\u6027...</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> PropTypes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Link</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">methodsAreOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>url<span class="token punctuation">}</span></span> <span class="token attr-name">data-id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

Link<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> propTypes<span class="token punctuation">;</span>
Link<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> defaultProps<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Link<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></li>`,1),Es=n("code",null,"React.createClass",-1),Hs=s(" \u7684\u751F\u547D\u5468\u671F\u51FD\u6570\uFF0C\u4E0E\u4F7F\u7528class\u7A0D\u6709\u4E0D\u540C: eslint: "),Os={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-comp.md",target:"_blank",rel:"noopener noreferrer"},Vs=n("code",null,"react/sort-comp",-1),Ks=a('<ol><li><code>displayName</code> \u8BBE\u5B9A\u6A21\u5757\u540D\u79F0</li><li><code>propTypes</code> \u8BBE\u7F6E\u5C5E\u6027\u7684\u7C7B\u578B</li><li><code>contextTypes</code> \u8BBE\u7F6E\u4E0A\u4E0B\u6587\u7C7B\u578B</li><li><code>childContextTypes</code> \u8BBE\u7F6E\u5B50\u5143\u7D20\u4E0A\u4E0B\u6587\u7C7B\u578B</li><li><code>mixins</code> \u6DFB\u52A0\u4E00\u4E9Bmixins</li><li><code>statics</code></li><li><code>defaultProps</code> \u8BBE\u7F6E\u9ED8\u8BA4\u7684\u5C5E\u6027\u503C</li><li><code>getDefaultProps</code> \u83B7\u53D6\u9ED8\u8BA4\u5C5E\u6027\u503C</li><li><code>getInitialState</code> \u6216\u8005\u521D\u59CB\u72B6\u6001</li><li><code>getChildContext</code></li><li><code>componentWillMount</code></li><li><code>componentDidMount</code></li><li><code>componentWillReceiveProps</code></li><li><code>shouldComponentUpdate</code></li><li><code>componentWillUpdate</code></li><li><code>componentDidUpdate</code></li><li><code>componentWillUnmount</code></li><li><em>clickHandlers or eventHandlers</em> like <code>onClickSubmit()</code> or <code>onChangeDescription()</code></li><li><em>getter methods for <code>render</code></em> like <code>getSelectReason()</code> or <code>getFooterContent()</code></li><li><em>Optional render methods</em> like <code>renderNavigation()</code> or <code>renderProfilePicture()</code></li><li><code>render</code></li></ol><h2 id="ismounted" tabindex="-1"><a class="header-anchor" href="#ismounted" aria-hidden="true">#</a> isMounted</h2>',2),Qs=s("\u4E0D\u8981\u518D\u4F7F\u7528 "),$s=n("code",null,"isMounted",-1),Gs=s(". eslint: "),Ys={href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-is-mounted.md",target:"_blank",rel:"noopener noreferrer"},Zs=n("code",null,"react/no-is-mounted",-1),na=n("blockquote",null,[n("p",null,[s("\u4E3A\u4EC0\u4E48? "),n("a",{href:"anti-pattern"},[n("code",null,"isMounted"),s(" \u53CD\u4EBA\u7C7B\u8BBE\u8BA1\u6A21\u5F0F:()")]),s(", \u5728 ES6 classes \u4E2D\u65E0\u6CD5\u4F7F\u7528\uFF0C \u5B98\u65B9\u5C06\u5728\u672A\u6765\u7684\u7248\u672C\u91CC\u5220\u9664\u6B64\u65B9\u6CD5. [anti-pattern]: https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html")])],-1);function sa(aa,ta){const t=o("ExternalLinkIcon");return c(),l(u,null,[i,k,d,n("ul",null,[n("li",null,[b,n("ul",null,[n("li",null,[m,n("a",g,[h,p(t)]),_,n("a",v,[f,p(t)]),x])])]),y,j]),q,w,n("ul",null,[n("li",null,[n("p",null,[C,R,F,P,S,N,W,n("a",L,[M,p(t)]),T,n("a",D,[I,p(t)])]),J])]),X,n("ul",null,[z,U,n("li",null,[n("p",null,[A,B,n("a",E,[H,p(t)])]),O]),V]),K,n("ul",null,[n("li",null,[n("p",null,[Q,n("a",$,[G,p(t)])]),Y])]),Z,n("ul",null,[n("li",null,[nn,sn,an,n("a",tn,[pn,p(t)])])]),n("blockquote",null,[n("p",null,[en,n("a",on,[cn,p(t)]),ln,un,rn])]),kn,n("ul",null,[dn,n("li",null,[n("p",null,[bn,mn,gn,n("a",hn,[_n,p(t)])]),vn])]),fn,n("ul",null,[xn,n("li",null,[n("p",null,[yn,jn,qn,n("a",wn,[Cn,p(t)])]),Rn]),Fn,n("li",null,[n("p",null,[Pn,Sn,Nn,n("a",Wn,[Ln,p(t)])])])]),Mn,n("ul",null,[n("li",null,[n("p",null,[Tn,Dn,In,n("a",Jn,[Xn,p(t)]),zn,n("a",Un,[An,p(t)])]),Bn]),n("li",null,[n("p",null,[En,Hn,On,n("a",Vn,[Kn,p(t)])])])]),Qn,n("ul",null,[n("li",null,[$n,Gn,Yn,n("a",Zn,[ns,p(t)]),ss])]),as,n("ul",null,[n("li",null,[n("p",null,[ts,n("a",ps,[es,p(t)])]),os])]),cs,n("ul",null,[n("li",null,[n("p",null,[ls,us,rs,n("a",is,[ks,p(t)])]),ds])]),bs,n("ul",null,[n("li",null,[n("p",null,[ms,n("a",gs,[hs,p(t)])]),_s]),n("li",null,[n("p",null,[vs,n("a",fs,[xs,p(t)])]),ys])]),js,n("ul",null,[qs,n("li",null,[n("p",null,[ws,Cs,Rs,Fs,Ps,n("a",Ss,[Ns,p(t)])])])]),Ws,n("ul",null,[Ls,n("li",null,[n("p",null,[Ms,Ts,Ds,Is,Js,n("a",Xs,[zs,p(t)])]),Us])]),As,n("ul",null,[Bs,n("li",null,[n("p",null,[Es,Hs,n("a",Os,[Vs,p(t)])])])]),Ks,n("ul",null,[n("li",null,[Qs,$s,Gs,n("a",Ys,[Zs,p(t)])])]),na],64)}var ea=e(r,[["render",sa],["__file","react\u89C4\u8303.html.vue"]]);export{ea as default};
